version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - TITAN_MAIL_PASSWORD=${TITAN_MAIL_PASSWORD}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - PINECONE_API_KEY=${PINECONE_API_KEY:-}
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID:-}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET:-}
      - OUTLOOK_CLIENT_ID=${OUTLOOK_CLIENT_ID:-}
      - OUTLOOK_CLIENT_SECRET=${OUTLOOK_CLIENT_SECRET:-}
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=aeonrfp
      - POSTGRES_USER=aeonrfp
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-aeonrfp123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aeonrfp -d aeonrfp"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  uploads:
  postgres_data: